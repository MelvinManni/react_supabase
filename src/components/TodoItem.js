import React, { useContext } from "react";
import { ItemsContext } from "../ItemsContext";

export default function TodoItem({ data, handleEdit }) {
  const { deleteItem, markAsDone, markActive } = useContext(ItemsContext);

  return (
    <div className="d-flex flex-wrap justify-content-between align-items-center todo-item">
      <div className=" w-100 mb-1">
        <p className="m-0 text">
          {data?.item || "hello"}
        </p>
      </div>
      <div className=" d-flex justify-content-between align-items-center w-100">
        <div className="d-flex align-items-center">
          <button
            onClick={() => {
              if (data?.done) {
                markActive(data?.id);
              } else {
                markAsDone(data?.id);
              }
            }}
            className="icon-btn border-1 "
          >
            {data?.done ? (
              <svg
                width="25"
                height="25"
                viewBox="0 0 25 25"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M25 22.3053C25 23.0199 24.7161 23.7052 24.2109 24.2106C23.7056 24.7159 23.0203 24.9999 22.3057 25H2.6943C1.97969 24.9999 1.29439 24.7159 0.789119 24.2106C0.283851 23.7052 -7.55731e-09 23.0199 0 22.3053L0 2.69435C0.000311568 1.97986 0.284275 1.29472 0.789487 0.7895C1.2947 0.284279 1.97983 0.000311573 2.6943 0L22.3057 0C23.0202 0.00020777 23.7054 0.284142 24.2106 0.789385C24.7159 1.29463 24.9998 1.97982 25 2.69435V22.3053Z"
                  fill="#37B34A"
                />
                <path
                  d="M21.1104 5.54153C20.7426 5.2274 20.2651 5.07215 19.7829 5.10993C19.3007 5.1477 18.8532 5.3754 18.5388 5.74297L10.6851 14.928L6.46007 11.4009C6.29281 11.257 6.09861 11.1478 5.88878 11.0797C5.67894 11.0115 5.45764 10.9857 5.23776 11.0038C5.01787 11.0219 4.80378 11.0836 4.60792 11.1851C4.41206 11.2867 4.23835 11.4262 4.09689 11.5955C3.95542 11.7649 3.84902 11.9606 3.78386 12.1714C3.71871 12.3822 3.69611 12.6038 3.71737 12.8234C3.73864 13.0431 3.80334 13.2562 3.90772 13.4506C4.0121 13.645 4.15408 13.8167 4.3254 13.9557L9.98598 18.6821C10.1605 18.8276 10.3632 18.9357 10.5813 18.9994C10.7994 19.0632 11.0283 19.0814 11.2538 19.0528C11.4929 19.0344 11.726 18.9689 11.9398 18.8603C12.1535 18.7516 12.3438 18.6018 12.4996 18.4195L21.3107 8.11243C21.6245 7.74444 21.7794 7.26698 21.7416 6.78485C21.7038 6.30272 21.4762 5.85529 21.1088 5.54075"
                  fill="#F4F4F4"
                />
              </svg>
            ) : (
              <svg
                width="25"
                height="25"
                viewBox="0 0 25 25"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M24 0H1C0.446875 0 0 0.446875 0 1V24C0 24.5531 0.446875 25 1 25H24C24.5531 25 25 24.5531 25 24V1C25 0.446875 24.5531 0 24 0ZM22.75 22.75H2.25V2.25H22.75V22.75Z"
                  fill="black"
                  fillOpacity="0.8"
                />
                <path
                  d="M6.75 13.5H18.25C18.3875 13.5 18.5 13.3875 18.5 13.25V11.75C18.5 11.6125 18.3875 11.5 18.25 11.5H6.75C6.6125 11.5 6.5 11.6125 6.5 11.75V13.25C6.5 13.3875 6.6125 13.5 6.75 13.5Z"
                  fill="black"
                  fillOpacity="0.8"
                />
              </svg>
            )}
          </button>
          {!data?.done && (
            <button
              onClick={() => handleEdit(data)}
              className=" icon-btn align-self-end "
            >
              <svg
                width="27"
                height="27"
                viewBox="0 0 27 27"
                fill="none"
                xmlns="http://www.w3.org/2000/svg"
              >
                <path
                  d="M19.3443 4.54096L22.459 7.65423L19.3443 4.54096ZM21.3473 1.79828L12.9251 10.2204C12.49 10.655 12.1932 11.2086 12.0722 11.8116L11.2942 15.7058L15.1884 14.9264C15.7913 14.8058 16.3443 14.5102 16.7796 14.0749L25.2017 5.65273C25.4548 5.39965 25.6556 5.09919 25.7925 4.76852C25.9295 4.43784 26 4.08343 26 3.72551C26 3.36759 25.9295 3.01318 25.7925 2.6825C25.6556 2.35183 25.4548 2.05137 25.2017 1.79828C24.9486 1.5452 24.6482 1.34444 24.3175 1.20747C23.9868 1.0705 23.6324 1 23.2745 1C22.9166 1 22.5622 1.0705 22.2315 1.20747C21.9008 1.34444 21.6004 1.5452 21.3473 1.79828V1.79828Z"
                  stroke="#0275D8"
                  strokeWidth="2"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                />
                <path
                  d="M23.0591 18.647V23.0588C23.0591 23.8389 22.7492 24.587 22.1976 25.1385C21.646 25.6901 20.8979 26 20.1178 26H3.94121C3.16115 26 2.41304 25.6901 1.86146 25.1385C1.30988 24.587 1 23.8389 1 23.0588V6.88216C1 6.1021 1.30988 5.35399 1.86146 4.80241C2.41304 4.25083 3.16115 3.94095 3.94121 3.94095H8.35302"
                  stroke="#0275D8"
                  strokeWidth="2"
                  strokeLinecap="round"
                  strokeLinejoin="round"
                />
              </svg>
            </button>
          )}
        </div>

        <button
          onClick={() => deleteItem(data?.id)}
          className=" icon-btn align-self-end "
        >
          <svg
            width="24"
            height="29"
            viewBox="0 0 24 29"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M11.8753 3.51433e-09C13.1778 -4.86447e-05 14.4296 0.504975 15.3675 1.40887C16.3053 2.31277 16.8561 3.5451 16.904 4.84674L16.9072 5.03272L22.3417 5.03191C22.7052 5.03208 23.0546 5.17274 23.3168 5.42449C23.5791 5.67625 23.7338 6.01962 23.7488 6.38283C23.7638 6.74604 23.6378 7.10098 23.3972 7.37346C23.1565 7.64594 22.8199 7.81488 22.4576 7.84495L22.3417 7.84978H21.4021L20.0922 25.2159C20.0273 26.0764 19.6396 26.8805 19.0069 27.4672C18.3741 28.054 17.5431 28.38 16.6802 28.38H7.07044C6.20754 28.38 5.37649 28.054 4.74377 27.4672C4.11105 26.8805 3.72337 26.0764 3.6584 25.2159L2.34769 7.84978H1.40894C1.05521 7.84975 0.714443 7.71668 0.454315 7.47698C0.194187 7.23729 0.0337345 6.90852 0.00483029 6.55598L0 6.44085C2.98427e-05 6.08713 0.133109 5.74636 0.372803 5.48623C0.612496 5.2261 0.941266 5.06565 1.29381 5.03674L1.40894 5.03191H6.8434C6.8434 2.37667 8.90045 0.201276 11.5082 0.0128815L11.6909 0.00322058L11.8753 3.51433e-09ZM14.8945 10.4664C14.6453 10.4663 14.405 10.5586 14.22 10.7254C14.035 10.8923 13.9184 11.1219 13.8929 11.3697L13.8881 11.4728V21.134L13.8929 21.2371C13.9174 21.4857 14.0334 21.7164 14.2186 21.8842C14.4037 22.052 14.6446 22.145 14.8945 22.145C15.1443 22.145 15.3852 22.052 15.5704 21.8842C15.7555 21.7164 15.8716 21.4857 15.896 21.2371L15.9008 21.134V11.4728L15.896 11.3697C15.8705 11.1219 15.754 10.8923 15.569 10.7254C15.3839 10.5586 15.1436 10.4663 14.8945 10.4664V10.4664ZM8.85617 10.4664C8.60702 10.4663 8.36669 10.5586 8.18168 10.7254C7.99667 10.8923 7.88013 11.1219 7.85462 11.3697L7.84979 11.4728V21.134L7.85462 21.2371C7.87907 21.4857 7.99514 21.7164 8.18026 21.8842C8.36538 22.052 8.60631 22.145 8.85617 22.145C9.10603 22.145 9.34695 22.052 9.53207 21.8842C9.71719 21.7164 9.83327 21.4857 9.85772 21.2371L9.86255 21.134V11.4728L9.85772 11.3697C9.83221 11.1219 9.71567 10.8923 9.53066 10.7254C9.34565 10.5586 9.10532 10.4663 8.85617 10.4664V10.4664ZM12.0106 2.8219L11.8753 2.81787C11.3115 2.81784 10.7689 3.03291 10.3583 3.4192C9.94758 3.80549 9.69974 4.3339 9.6653 4.89666L9.66127 5.03272L14.0894 5.03191C14.0894 4.46811 13.8743 3.92553 13.488 3.51485C13.1017 3.10418 12.5733 2.85634 12.0106 2.8219V2.8219Z"
              fill="#DF4759"
            />
          </svg>
        </button>
      </div>
    </div>
  );
}
